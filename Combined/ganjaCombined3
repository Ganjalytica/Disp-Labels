<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ganjalytica</title>
  <style>
p {
  line-height: 1.2; /* Adjust this value as needed */
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

    body {
      font-family: Arial, sans-serif;
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }

    h1 {
      text-align: center;
    }

    .container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
    }

    .container > div {
      flex: 1 0 calc(50% - 10px);
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-top: 15px;
    }

    select {
      width: 100%;
    }

    button {
      display: block;
      margin-top: 20px;
      padding: 10px;
      width: 100%;
      background-color: #879784;
      color: white;
      border: none;
      border-radius: 5px;
      transition: background-color 0.1s;
    }

    /* Change the color of the button when it's hovered over */
    button:hover {
      background-color: #b8c2b6;
    }

    button:focus {
      background-color: #879784;
    }

    /* Change the color of the button when it's pressed */
    button:active {
      background-color: #b8c2b6;
      transform: scale(0.98);
    }

    .result {
  background-size: contain;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-family: Verdana, sans-serif;
  font-size: 10px;
  color: #000;
  padding: 0;
  box-sizing: border-box;
  margin: 0 auto;
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
}

.result.large {
  width: 72.2mm;
  height: 101.6mm;
}

.result-small {
  width: 93mm;
  height: 42mm;

}

.result .content {
  width: 61mm;
  height: 62mm;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  padding-top: 1px; /* Adjust this value to move the text higher or lower */
  margin-top: -15mm;
}


.result-price-box {
  width: 72.2mm;
  height: 101.6mm;
}

.result-no-price-box {
  width: 72.2mm;
  height: 86mm;
}



.result .strainName {
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
  font-size: 18px;
}

.result .score {
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
  font-size: 16px;
  margin: 0;
}

.result .effects {
  font-size: 14px;
}

.result .paragraph {
  font-size: 10px;
  margin: 0;
}


    .result p {
      font-size: 16px;
      font-weight: normal;
    }

    .result .data {
      font-size: 16px;
      font-weight: bold;
    }

    .result .small-print {
      font-size: 12px;
      font-weight: bold;
    }

    .result .highlight {
      font-size: 16px;
      font-weight: bold;
    }

    .result:hover {
      box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
    }

    @media (max-width: 576px) {
      .container > div {
        flex: 1 0 100%;
      }
    }

    #dispensary-name-label {
      display: none;
    }

    #strainAndMethod {
  font-size: 0.8em;
  font-weight: normal;
  color: #666;
  display: inline-block;
  margin-left: 5px;
}

.radio-label {
  display: inline-block;
  margin-right: 10px;
  font-size: 14px;
}

.radio-label input[type="radio"] {
  margin-right: 5px;
}


    #firstPart {
      transition: opacity 0.5s ease-in-out, height 0.5s ease-in-out;
      overflow: hidden;
    }

    #firstPart, #effects-section {
  transition: opacity 0.5s ease-in-out, max-height 0.5s ease-in-out;
  opacity: 1;
  max-height: 1000px;
}


    #ratingForm {
      background-color: #ececea;
      padding: 20px;
      border-radius: 10px;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
      box-shadow: 0px 10px 20px 0px rgba(0, 0, 0, 0.1);
    }

    #ratingForm:hover {
      box-shadow: 0px 10px 30px 0px rgba(0, 0, 0, 0.2);
    }

    .code-block {
      background-color: #f0f0f0;
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 10px;
      font-family: "Courier New", Courier, monospace;
      white-space: pre-wrap;
      word-wrap: break-word;
      margin-top: 20px;
    }

  </style>
</head>
<body>
  <h1>Ganjalytica Cannabis Grading Tool</h1>

  <form id="ratingForm">
    <div id="firstPart">
      <label>Dispensary Name: <input type="text" id="dispensary-name" name="dispensaryName" required maxlength="18"></label>
      <label>Strain Name: <input type="text" name="strainName" required maxlength="20"></label>
      <div id="consumption-method-section">
        <label for="consumption-method">Consumption Method:</label>
        <select id="consumption-method" name="consumption-method">
          <option value="" selected>Please Select</option>
          <option value="water-bong">Water Bong</option>
          <option value="pure-joint">Pure Joint</option>
          <option value="pipe">Pipe</option>
          <option value="vape" disabled>Vape</option>
        </select>
      </div>
    </div>
    <div id="effects-section" style="opacity: 0; max-height: 0;">
      <h3>Effects <span id="strainAndMethod"></span></h3>
      <label>Smoothness of Taste:
        <select name="smoothness" required>
          <option value="" disabled selected>Select a value</option>
          <option value="1">Very Harsh</option>
          <option value="1.5">Quite Harsh</option>
          <option value="2">Harsh</option>
          <option value="2.5">Slightly Harsh</option>
          <option value="3">In the middle</option>
          <option value="3.5">Somewhat smooth</option>
          <option value="4">Smooth</option>
          <option value="4.5">Quite Smooth</option>
          <option value="5">Smoother than a buttered otter</option>
        </select>
      </label>
      <label>Onset of Effects:
        <select name="onset" required>
          <option value="" disabled selected>Select a value</option>
          <option value="1">Very Slow</option>
          <option value="1.5">Quite Slow</option>
          <option value="2">Slow</option>
          <option value="2.5">Somewhat slow</option>
          <option value="3">Normal</option>
          <option value="3.5">Slightly Quick</option>
          <option value="4">Quick</option>
          <option value="4.5">Fast</option>
          <option value="5">Immediate</option>
        </select>
      </label>
      <label>Intensity of Effects:
        <select name="effectsIntensity" required>
          <option value="" disabled selected>Select a value</option>
          <option value="1">Very Mild</option>
          <option value="1.5">Quite Mild</option>
          <option value="2">Mild</option>
          <option value="2.5">Feel a Buzz</option>
          <option value="3">Gentle Buzz</option>
          <option value="3.5">Feeling it</option>
          <option value="4">Buzzing</option>
          <option value="4.5">Strong</option>
          <option value="5">Intense</option>
        </select>
      </label>
      <label>Enjoyment of Effects:
        <select name="enjoyment" required>
          <option value="" disabled selected>Select a value</option>
          <option value="1">Very Unenjoyable</option>
          <option value="1.5">Unenjoyable</option>
          <option value="2">A Little Flicker of Hope</option>
          <option value="2.5">Not Bad</option>
          <option value="3">Alright</option>
          <option value="3.5">Pretty Good</option>
          <option value="4">Enjoyable</option>
          <option value="4.5">Very Nice Indeed</option>
          <option value="5">Bliss</option>
        </select>
      </label>
      <label>Duration of Effects:
        <select name="duration" required>
          <option value="" disabled selected>Select a value</option>
          <option value="1">Very Disappointing, over in 5 mins</option>
          <option value="1.5">Pretty Short</option>
          <option value="2">Short</option>
          <option value="2.5">Over Sooner Than Hoped</option>
          <option value="3">Not Bad at 25 mins</option>
          <option value="3.5">OK Length</option>
          <option value="4">Decent Length</option>
          <option value="4.5">Quite Long</option>
          <option value="5">Very long</option>
        </select>
      </label>
    </div>
    <button type="submit" style="display: none;">Submit</button>
    <!-- Initially hide the submit button -->
  </form>

  <div id="loading" style="display: none; text-align: center; padding: 20px; margin-top: 50px;">
    <img src="https://i.gifer.com/1pOk.gif" alt="Loading..." width="50" height="50" />
  </div>
  
  
  
  

  <div class="result" id="result" style="display: none;"></div>
  <!-- Add this where you want the options to appear -->
<div id="options" style="display: none;">
  <div>
    <h3>Options:</h3>
    <div>
      <label for="corners">Corner Style:</label>
      <label class="radio-label" for="square">
        <input type="radio" id="square" name="corners" value="square">
        Square Corners
      </label>
      <label class="radio-label" for="rounded">
        <input type="radio" id="rounded" name="corners" value="rounded" checked>
        Rounded Corners
      </label>
    </div>
    <div>
      <label for="price-box">Price Box:</label>
      <label class="radio-label" for="with-price">
        <input type="radio" id="with-price" name="price-box" value="with-price" checked>
        With Price Box
      </label>
      <label class="radio-label" for="without-price">
        <input type="radio" id="without-price" name="price-box" value="without-price">
        Without Price Box
      </label>
    </div>
    <div>
      <label for="size">Label Size:</label>
      <label class="radio-label" for="large">
        <input type="radio" id="large" name="size" value="large" checked>
        Large
      </label>
      <label class="radio-label" for="small">
        <input type="radio" id="small" name="size" value="small">
        Small
      </label>
    </div>
  </div>
</div>


  
  

<!-- Add this where you want the buttons to appear -->
<button id="download">Download</button>
<button id="print">Print</button>


  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const consumptionMethodSection = document.getElementById("consumption-method-section");
      const effectsSection = document.getElementById("effects-section");
      const submitButton = document.querySelector("#ratingForm button"); // Get the submit button
      const options = document.getElementById("options");
      const downloadButton = document.getElementById("download");
      const printButton = document.getElementById("print");

      effectsSection.style.display = "none"; // Hide the effects section initially
      submitButton.style.display = "none"; // Hide the submit button initially
      options.style.display = "none";



      function checkFields() {
        const selectedOption = document.getElementById("consumption-method").value;
        const dispensaryName = document.getElementById("dispensary-name").value;
        const strainName = document.querySelector("input[name='strainName']").value;

        var firstPart = document.getElementById("firstPart");

        if (selectedOption && dispensaryName && strainName) {
  // Unhide the effects section and the submit button
  effectsSection.style.opacity = "1";
  effectsSection.style.maxHeight = "1000px";
  effectsSection.style.display = "block"; // Add this line
  submitButton.style.display = "block";
  
  // Hide the first part of the form
  firstPart.style.opacity = "0";
  firstPart.style.maxHeight = "0";
  
  // Add the strain name and consumption method to the effects section
  const strainName = document.querySelector("input[name='strainName']").value;
  const consumptionMethod = document.getElementById("consumption-method").value;
  document.getElementById("strainAndMethod").textContent = `of ${strainName} by ${consumptionMethod}`;
} else {
  // Hide the effects section and the submit button
  effectsSection.style.opacity = "0";
  effectsSection.style.maxHeight = "0";
  effectsSection.style.display = "none"; // Add this line
  submitButton.style.display = "none";
  
  // Show the first part of the form
  firstPart.style.opacity = "1";
  firstPart.style.maxHeight = "1000px";
}

      }

      document.getElementById("consumption-method").addEventListener("change", checkFields);
      document.getElementById("dispensary-name").addEventListener("input", checkFields);
      document.querySelector("input[name='strainName']").addEventListener("input", checkFields);

      // Call checkFields initially to set the correct state
      checkFields();

      document.getElementById("ratingForm").addEventListener("submit", function(event) {
        event.preventDefault();

// Gather the form data before hiding the form
const formData = new FormData(event.target);

// Show the loading spinner and hide the form and results
document.getElementById("loading").style.display = "block";
document.getElementById("ratingForm").style.display = "none";


setTimeout(function() {
  // Hide the loading spinner
  document.getElementById("loading").style.display = "none";

  // Show the result
  document.getElementById("result").style.display = "flex";

  // Show the options
  document.getElementById("options").style.display = "block";

  // Scroll to the result
  document.getElementById("result").scrollIntoView({ behavior: 'smooth' });

  // Additional code can be added here, if needed
}, 2000); // 2000 milliseconds = 2 seconds



        const dispensaryName = formData.get("dispensaryName");
        const ratings = {
          enjoyment: Number(formData.get("enjoyment")),
          intensity: Number(formData.get("effectsIntensity")),
          duration: Number(formData.get("duration")),
          onset: Number(formData.get("onset")),
          smoothness: Number(formData.get("smoothness"))
        };

        const strainName = document.querySelector("input[name='strainName']").value;
const consumptionMethod = document.getElementById("consumption-method").value;
console.log(`strainName: ${strainName}, consumptionMethod: ${consumptionMethod}`); // Add this line
document.getElementById("strainAndMethod").textContent = `of ${strainName} by ${consumptionMethod}`;

        let weights;

        if (consumptionMethod === "water-bong") {
          weights = {
            enjoyment: 0.35,
            intensity: 0.30,
            duration: 0.10,
            onset: 0.10,
            smoothness: 0.15
          };
        } else if (consumptionMethod === "pure-joint") {
          weights = {
            enjoyment: 0.32,
            intensity: 0.28,
            duration: 0.10,
            onset: 0.10,
            smoothness: 0.20
          };
        } else if (consumptionMethod === "pipe") {
          weights = {
            enjoyment: 0.30,
            intensity: 0.25,
            duration: 0.10,
            onset: 0.10,
            smoothness: 0.25
          };
        }

        const weightedScore = (ratings.enjoyment * weights.enjoyment) +
          (ratings.intensity * weights.intensity) +
          (ratings.duration * weights.duration) +
          (ratings.onset * weights.onset) +
          (ratings.smoothness * weights.smoothness);

        const finalScore = weightedScore * 20;
        let qualityRating = "";

        if (finalScore <= 10) qualityRating = "No noticeable effects - 😔 Any effects are likely placebo.";
        else if (finalScore <= 20) qualityRating = "Actual Oregano - 🌿 A member of the mint family, this herb is a perfect topping for pizza.";
        else if (finalScore <= 30) qualityRating = "Very slight effects - 😐 Likely only noticeable to experienced users.";
        else if (finalScore <= 40) qualityRating = "Barely noticeable effects - 😌 Might include slight relaxation or mood lift.";
        else if (finalScore <= 50) qualityRating = "Slight buzz - 😏 Very mild effects. Mood enhancement and slight changes in perception.";
        else if (finalScore <= 60) qualityRating = "Mildly high - 🙂  Subtle changes in mood and perception. Might not be noticeable to others.";
        else if (finalScore <= 70) qualityRating = "Moderately high - 😃 Noticeable effects that might include laughter, altered perception, and mood enhancement.";
        else if (finalScore <= 80) qualityRating = "High - 😜 Strong effects that significantly alter perception and mood. Likely to be noticeable to others.";
        else if (finalScore <= 90) qualityRating = "Very high - 🤪 Intense effects that might be too strong for some users. Activities requiring focus or coordination are likely impaired.";
        else if (finalScore < 100) qualityRating = "Completely stoned - 🥴 Overwhelming effects, potentially including hallucinations or time distortion. Not recommended for inexperienced users.";
        else qualityRating = "😶🍳 - Fried";

        let paragraphText = '';
if (size !== "small") {
  paragraphText = `<p class="paragraph"><strong>${dispensaryName}</strong> has employed the Ganjalytica tool to evaluate this specific batch of the <strong>${strainName}</strong> strain. This certificate also emphasizes <strong>${dispensaryName}'s</strong> dedication to transparency and quality. Thanks to Ganjalytica, this evaluation is specific to the exact product you have in your hands.</p>`;
}

document.getElementById("result").innerHTML =
  `<div class="content">
    <p class="strainName">${strainName}</p>
    <p class="score">Score: ${finalScore.toFixed(2)}/100</p>
    <p class="effects">Expected Effects: ${qualityRating}</p>
    ${paragraphText}
  </div>`;


        const prompt = `I have just rated some cannabis. Acting as a high-level cannabis connoisseur and data scientist, you will analyze the cannabis I have in front of me based on my ratings from 1-5 in increments of .5 and compare it with the official strain: ${strainName}. User rated at: Smoothness: ${ratings.smoothness}/5, Onset: ${ratings.onset}/5, Intensity: ${ratings.intensity}/5, Enjoyment: ${ratings.enjoyment}/5, and Duration: ${ratings.duration}/5. Make it short and honest, including any additional effects I may encounter, a percentage match with the official strain, and an educated guess at THC content. Thank the user for trying the Ganjalytica tool. Include a disclaimer about THC, responsible consumption, local laws, and not medical advice. Present it written as if you are smoking it with the user, under the influence of this particular strain`;

        // Display the prompt
        // Clear the #prompt element
        document.getElementById("prompt").innerHTML = "";

        // Create and append the new prompt
        const promptElement = document.createElement("p");
        promptElement.innerText = prompt;
        document.getElementById("prompt").appendChild(promptElement);

        // Add a button to copy the prompt to clipboard
        const copyButton = document.createElement("button");
        copyButton.innerText = "Copy";
        copyButton.addEventListener("click", function() {
          navigator.clipboard.writeText(prompt).then(function() {
            // The copy operation was successful
            copyButton.innerText = "Copied!";
            setTimeout(function() {
              copyButton.innerText = "Copy";
            }, 2000);
          }, function() {
            // The copy operation failed
            copyButton.innerText = "Failed to copy";
            setTimeout(function() {
              copyButton.innerText = "Copy";
            }, 2000);
          });
        });
        document.getElementById("prompt").appendChild(copyButton);
      });
    });
    function updateLabel() {
 // Get the selected options
const corners = document.querySelector("input[name='corners']:checked").value;
const priceBox = document.querySelector("input[name='price-box']:checked").value;
const size = document.querySelector("input[name='size']:checked").value;

// Map the options to the Canva design URLs
const urls = {
  "square-with-price-large": "https://ganjalytica.com/wp-content/uploads/2023/06/SC-Full-Label-Blank-PB.png",
  "square-without-price-large": "https://ganjalytica.com/wp-content/uploads/2023/06/SC-NOPB-Full-label.png",
  "rounded-with-price-large": "https://ganjalytica.com/wp-content/uploads/2023/06/FULL-LABEL-PB.png",
  "rounded-without-price-large": "https://ganjalytica.com/wp-content/uploads/2023/06/NOPB-Full-label.png",
  "square-with-price-small": "https://ganjalytica.com/wp-content/uploads/2023/06/SC-Small-NP-Label-.png",
  "rounded-with-price-small": "https://ganjalytica.com/wp-content/uploads/2023/06/RC-Small-NP-Label-.png"
};


// Get the URL for the selected options
const url = urls[`${corners}-${priceBox}-${size}`];

// Get the result element
const result = document.getElementById("result");

// Remove the existing classes
result.classList.remove("result-price-box", "result-no-price-box", "result.small-price-box");

// Add the correct class based on the size
if (size === "small") {
  result.classList.add("result-small");
} else if (priceBox === "with-price") {
  result.classList.add("result-price-box");
} else {
  result.classList.add("result-no-price-box");
}

// Update the label
result.style.backgroundImage = `url(${url})`;

}
// Call updateLabel initially to set the correct label
updateLabel();



document.getElementById("download").addEventListener("click", function() {
  // Download the design
  window.location.href = document.getElementById("result").style.backgroundImage.slice(4, -1).replace(/"/g, "");
});

// Add event listeners to the radio buttons
document.querySelectorAll("input[name='corners'], input[name='price-box'], input[name='size']").forEach(function(radio) {
  radio.addEventListener("change", updateLabel);
});


// Call updateLabel initially to set the correct label
updateLabel();
// Call updateAvailability initially to set the correct state
updateAvailability();

// Add event listeners to the radio buttons to call updateAvailability when they change
document.querySelectorAll("input[name='price-box'], input[name='size']").forEach(function(radio) {
  radio.addEventListener("change", updateAvailability);
});



  document.getElementById("print").addEventListener("click", function() {
    // Print the label
    const label = document.getElementById("result");
    const win = window.open("", "_blank");
    win.document.write(label.outerHTML);
    win.print();
  });
  function updateAvailability() {
    const priceBox = document.querySelector("input[name='price-box']:checked").value;
    const size = document.querySelector("input[name='size']:checked").value;

    // Get the radio buttons
    const smallSize = document.getElementById("small");
    const withPriceBox = document.getElementById("with-price");

    // Update the disabled property based on the selected options
    smallSize.disabled = priceBox === "with-price";
    withPriceBox.disabled = size === "small";
  }
</script>
</body>
</html>